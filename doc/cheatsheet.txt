*cheatsheet.txt*    My own *cheatsheet*

:help quickref

==============================================================================
1. 摺疊								     |Folding|

enable / disable fold~
	zn zN zi

opening and closing folds~
	zR 打開全部
	zM 關閉全部

	zo / ZO
	zc / zC

moving over folds~
	zj / zk
	[z / ]z

==============================================================================
2. 插入模式

completion~
							      |ins-completion|

	1. 整行	                                        |i_CTRL-X_CTRL-L|
	13. keywords in 'complete' (from other buffers)	        |i_CTRL-N| |i_CTRL-P|
	2. 當前文件					    	|i_CTRL-X_CTRL-N|
	5. 當前文件 + include			    		|i_CTRL-X_CTRL-I|
	6. tags							|i_CTRL-X_CTRL-]|
	7. file names						|i_CTRL-X_CTRL-F|
	8. definitions or macros				|i_CTRL-X_CTRL-D|
	12. Spelling suggestions				|i_CTRL-X_s|
	3. keywords in 'dictionary'				|i_CTRL-X_CTRL-K|

	CTRL-E		Insert the character which is below the cursor.

	*Todo	try thesaurus
	4. keywords in 'thesaurus', thesaurus-style		|i_CTRL-X_CTRL-T|


keymap~
							    |ins-special-keys|

	CTRL-I or <TAB> Insert a tab.			            |i_CTRL-I|
	CTRL-R {register}				            |i_CTRL-R|
	CTRL-R CTRL-O {register}	insert as it is	     |i_CTRL-R_CTRL-R|
	CTRL-Y		Insert 上一行同樣位置的字符
	CTRL-]		Trigger abbreviation, without inserting a character.

	CTRL-G CTRL-T   時間
	CTRL-G d	:Linediff

==============================================================================
3. 命令模式	   					     |cmdline-editing|

edit~

    CTRL-R CTRL-F				|c_CTRL-R_CTRL-F| |c_<C-R>_<C-F>|
    CTRL-R CTRL-P				|c_CTRL-R_CTRL-P| |c_<C-R>_<C-P>|
    CTRL-R CTRL-W				|c_CTRL-R_CTRL-W| |c_<C-R>_<C-W>|
    CTRL-R CTRL-A				|c_CTRL-R_CTRL-A| |c_<C-R>_<C-A>|
    CTRL-R CTRL-L				|c_CTRL-R_CTRL-L| |c_<C-R>_<C-L>|
		    Insert the object under the cursor:
			    CTRL-F	文件
			    CTRL-P	文件但是expand as gf
			    CTRL-W	the Word under the cursor
			    CTRL-A	the WORD under the cursor; see |WORD|
			    CTRL-L	the line under the cursor

    CTRL-R {register}					     |c_CTRL-R| |c_<C-R>|
    = # % " +

    CTRL-D		List names that match the pattern in front of the cursor.

							  |filename-modifiers|

incsearch~
								 |'incsearch'|
	    You can use the CTRL-G and CTRL-T 在匹配項間移動

	    CTRL-L 加入下一個字


Get output from command
:put =execute('messages')

==============================================================================
4. change							    |change.txt|

SSSS~
									|case|
{gu,gU,g~}{motion}
guu gUU g~~	current line

COERCION
						       |abolish-coercion| |cr|

Abolish's case mutating algorithms can be applied to the word under the cursor
using the cr mapping (mnemonic: CoeRce) followed by one of the following
characters:

  c:       camelCase
  p:       PascalCase
  m:       MixedCase (aka PascalCase)
  _:       snake_case
  s:       snake_case
  u:       SNAKE_UPPERCASE
  U:       SNAKE_UPPERCASE
  k:       kebab-case (not usually reversible; see |abolish-coercion-reversible|)
  -:       dash-case (aka kebab-case)
  .:       dot.case (not usually reversible; see |abolish-coercion-reversible|)


Adding and subtracting ~

								  |v_g_CTRL-A|
{Visual}g CTRL-A	後面每行額外+1

complex-change~

Substitute~
								   |:substitute|
:[range]s[ubstitute]/{pattern}/{string}/[flags] [count]

:[range]s[ubstitute] [flags] [count]
:[range]&[&][flags] [count]				    		|:&|
用上次的 pattern 以及 string，但是不保留 flags
想保留flags可以 :&&

&	重複上一個替換
|g&|	`:%s//~/&`  整個文件重複上一個替換

:[range]~[&][flags] [count] 用新pattern以及上次的替換值		  	|:~| |:&r|

FLAGS
[c] confirm
[n] report number
[i] ignore case
[I] strict case

SPECIAL STRING
& 整個匹配(等於 \0)
~ 上次的 {string}

Sort~
								     |sorting|
:[range]sor[t][!] [b][f][i][l][n][o][r][u][x] [/{pattern}/]
! 反向
i ignorecase

f 浮點數
bonx 第一個{2,8,10,16}進制

如果有 {pattern}，匹配到的將被跳過。如果 [r]，則用匹配到的排序
	第一個逗號之前被跳過:
		`:sort /[^,]*,/`
	前10列被跳過:
		`:sort /.*\%10v/`
	第一個三連字母
		`:sort /\a\a\a/ r`

如果沒有 {pattern} 是 //，使用上一個 /

==============================================================================
5. repeat					    		|repeat.txt|

==============================================================================
6. search
|search-offset| e to the end /foo/e-1 /foo/b+1 /foo/+1
|gn| |gN| goto match and enter visual mode

|helpgrep| grep help to quickfix

==============================================================================
7. data structure

List manipulation:						|list-functions|
Dictionary manipulation:					|dict-functions|

len({expr})
extend({expr1}, {expr2} [, {expr3}])

==============================================================================
8. Move
|w| |b| begin of word
|e| |ge| end of word

When using blockwise selection, Use "O" to move to the other corner in the
same line.

textobj s = sentence

[{ ]} [( [) goto first unmatching 

==============================================================================
9. Register
快速創建命令/map~
qq錄製宏
<C-R>=keytrans(@q)

大寫register用來append
qQ
"AY

==============================================================================
10. spell check
{count}z= 改正
|i_CTRL-X_CTRL-S| |i_CTRL-X_s| 進入補全改正
[s ]s [S ]S 跳轉。大寫skip rare words
zg zw 好詞good 壞詞wrong
zug zuw 取消標記

inoremap <C-l> <c-g>u<Esc>[s1z=`]a<c-g>u

==============================================================================
11. terminal
	CTRL-W :	enter an Ex command
	CTRL-W .	send a CTRL-W to the job in the terminal
	CTRL-W " {reg}  paste register {reg}		|t_CTRL-W_quote|
	CTRL-W N	go to Terminal-Normal mode, see |Terminal-mode|
	CTRL-\ CTRL-N   go to Terminal-Normal mode, see |Terminal-mode|


==============================================================================
888. unimportant
insert mode~
	CTRL-T		>>
	{0,^}CTRL-D	<<
	CTRL-G {j,k,CTRL-J, CTRL-K}	上下移動cursor             |i_CTRL-G_j|
	CTRL-O		execute one command, return to Insert mode   |i_CTRL-O|


==============================================================================
999. other
|faq-10.8|  How do I scroll two or more buffers simultaneously?

 								|faq-12.9|
12.9. How do I yank all the lines containing a pattern into a buffer?

vim:tw=78:ts=8:noet:ft=help:norl:
